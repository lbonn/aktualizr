if(STORAGE_TYPE STREQUAL "filesystem")
  set(SOURCES fsstorage.cc)
  set(HEADERS fsstorage.h)
elseif(STORAGE_TYPE STREQUAL "sqlite")
  set(SOURCES fsstorage.cc sqlstorage.cc)
  set(HEADERS fsstorage.h sqlstorage.h sql_utils.h)
elseif(STORAGE_TYPE STREQUAL "android")
  set(SOURCES androidstorage.cc)
  set(HEADERS androidstorage.h)
else()
  message(FATAL_ERROR "Unknown storage type: ${storage_type}")
endif()

set(HEADERS ${HEADERS} invstorage.h)
set(SOURCES ${SOURCES} invstorage.cc)

add_library(storage OBJECT ${SOURCES})

add_aktualizr_test(NAME storage_atomic SOURCES storage_atomic_test.cc PROJECT_WORKING_DIRECTORY)
add_aktualizr_test(NAME sql_utils SOURCES sql_utils_test.cc PROJECT_WORKING_DIRECTORY)
add_aktualizr_test(NAME sqlstorage SOURCES sqlstorage_test.cc PROJECT_WORKING_DIRECTORY
                   ARGS ${PROJECT_SOURCE_DIR}/config/schemas)
add_aktualizr_test(NAME storage SOURCES storage_common_test.cc PROJECT_WORKING_DIRECTORY)


aktualizr_source_file_checks(${SOURCES} ${HEADERS} ${TEST_SOURCES})
